/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

"use strict";
eval("\"use strict\";\n\n/*! AdminLTE app.js\n * ================\n * Main JS application file for AdminLTE v2. This file\n * should be included in all pages. It controls some layout\n * options and implements exclusive AdminLTE plugins.\n *\n * @Author  Almsaeed Studio\n * @Support <http://www.almsaeedstudio.com>\n * @Email   <abdullah@almsaeedstudio.com>\n * @version 2.3.6\n * @license MIT <http://opensource.org/licenses/MIT>\n */\n\n//Make sure jQuery has been loaded before app.js\n\nif (typeof jQuery === \"undefined\") {\n    throw new Error(\"AdminLTE requires jQuery\");\n}\n\n/* AdminLTE\n *\n * @type Object\n * @description $.AdminLTE is the main object for the template's app.\n *              It's used for implementing functions and options related\n *              to the template. Keeping everything wrapped in an object\n *              prevents conflict with other plugins and is a better\n *              way to organize our code.\n */\n$.AdminLTE = {};\n\n/* --------------------\n * - AdminLTE Options -\n * --------------------\n * Modify these options to suit your implementation\n */\n$.AdminLTE.options = {\n    //Add slimscroll to navbar menus\n    //This requires you to load the slimscroll plugin\n    //in every page before app.js\n    navbarMenuSlimscroll: true,\n    navbarMenuSlimscrollWidth: \"3px\", //The width of the scroll bar\n    navbarMenuHeight: \"200px\", //The height of the inner menu\n    //General animation speed for JS animated elements such as box collapse/expand and\n    //sidebar treeview slide up/down. This options accepts an integer as milliseconds,\n    //'fast', 'normal', or 'slow'\n    animationSpeed: 500,\n    //Sidebar push menu toggle button selector\n    sidebarToggleSelector: \"[data-toggle='offcanvas']\",\n    //Activate sidebar push menu\n    sidebarPushMenu: true,\n    //Activate sidebar slimscroll if the fixed layout is set (requires SlimScroll Plugin)\n    sidebarSlimScroll: true,\n    //Enable sidebar expand on hover effect for sidebar mini\n    //This option is forced to true if both the fixed layout and sidebar mini\n    //are used together\n    sidebarExpandOnHover: false,\n    //BoxRefresh Plugin\n    enableBoxRefresh: true,\n    //Bootstrap.js tooltip\n    enableBSToppltip: true,\n    BSTooltipSelector: \"[data-toggle='tooltip']\",\n    //Enable Fast Click. Fastclick.js creates a more\n    //native touch experience with touch devices. If you\n    //choose to enable the plugin, make sure you load the script\n    //before AdminLTE's app.js\n    enableFastclick: false,\n    //Control Sidebar Options\n    enableControlSidebar: true,\n    controlSidebarOptions: {\n        //Which button should trigger the open/close event\n        toggleBtnSelector: \"[data-toggle='control-sidebar']\",\n        //The sidebar selector\n        selector: \".control-sidebar\",\n        //Enable slide over content\n        slide: true\n    },\n    //Box Widget Plugin. Enable this plugin\n    //to allow boxes to be collapsed and/or removed\n    enableBoxWidget: true,\n    //Box Widget plugin options\n    boxWidgetOptions: {\n        boxWidgetIcons: {\n            //Collapse icon\n            collapse: 'fa-minus',\n            //Open icon\n            open: 'fa-plus',\n            //Remove icon\n            remove: 'fa-times'\n        },\n        boxWidgetSelectors: {\n            //Remove button selector\n            remove: '[data-widget=\"remove\"]',\n            //Collapse button selector\n            collapse: '[data-widget=\"collapse\"]'\n        }\n    },\n    //Direct Chat plugin options\n    directChat: {\n        //Enable direct chat by default\n        enable: true,\n        //The button to open and close the chat contacts pane\n        contactToggleSelector: '[data-widget=\"chat-pane-toggle\"]'\n    },\n    //Define the set of colors to use globally around the website\n    colors: {\n        lightBlue: \"#3c8dbc\",\n        red: \"#f56954\",\n        green: \"#00a65a\",\n        aqua: \"#00c0ef\",\n        yellow: \"#f39c12\",\n        blue: \"#0073b7\",\n        navy: \"#001F3F\",\n        teal: \"#39CCCC\",\n        olive: \"#3D9970\",\n        lime: \"#01FF70\",\n        orange: \"#FF851B\",\n        fuchsia: \"#F012BE\",\n        purple: \"#8E24AA\",\n        maroon: \"#D81B60\",\n        black: \"#222222\",\n        gray: \"#d2d6de\"\n    },\n    //The standard screen sizes that bootstrap uses.\n    //If you change these in the variables.less file, change\n    //them here too.\n    screenSizes: {\n        xs: 480,\n        sm: 768,\n        md: 992,\n        lg: 1200\n    }\n};\n\n/* ------------------\n * - Implementation -\n * ------------------\n * The next block of code implements AdminLTE's\n * functions and plugins as specified by the\n * options above.\n */\n$(function () {\n    \"use strict\";\n\n    //Fix for IE page transitions\n\n    $(\"body\").removeClass(\"hold-transition\");\n\n    //Extend options if external options exist\n    if (typeof AdminLTEOptions !== \"undefined\") {\n        $.extend(true, $.AdminLTE.options, AdminLTEOptions);\n    }\n\n    //Easy access to options\n    var o = $.AdminLTE.options;\n\n    //Set up the object\n    _init();\n\n    //Activate the layout maker\n    $.AdminLTE.layout.activate();\n\n    //Enable sidebar tree view controls\n    $.AdminLTE.tree('.sidebar');\n\n    //Enable control sidebar\n    if (o.enableControlSidebar) {\n        $.AdminLTE.controlSidebar.activate();\n    }\n\n    //Add slimscroll to navbar dropdown\n    if (o.navbarMenuSlimscroll && typeof $.fn.slimscroll != 'undefined') {\n        $(\".navbar .menu\").slimscroll({\n            height: o.navbarMenuHeight,\n            alwaysVisible: false,\n            size: o.navbarMenuSlimscrollWidth\n        }).css(\"width\", \"100%\");\n    }\n\n    //Activate sidebar push menu\n    if (o.sidebarPushMenu) {\n        $.AdminLTE.pushMenu.activate(o.sidebarToggleSelector);\n    }\n\n    //Activate Bootstrap tooltip\n    if (o.enableBSToppltip) {\n        $('body').tooltip({\n            selector: o.BSTooltipSelector\n        });\n    }\n\n    //Activate box widget\n    if (o.enableBoxWidget) {\n        $.AdminLTE.boxWidget.activate();\n    }\n\n    //Activate fast click\n    if (o.enableFastclick && typeof FastClick != 'undefined') {\n        FastClick.attach(document.body);\n    }\n\n    //Activate direct chat widget\n    if (o.directChat.enable) {\n        $(document).on('click', o.directChat.contactToggleSelector, function () {\n            var box = $(this).parents('.direct-chat').first();\n            box.toggleClass('direct-chat-contacts-open');\n        });\n    }\n\n    /*\n     * INITIALIZE BUTTON TOGGLE\n     * ------------------------\n     */\n    $('.btn-group[data-toggle=\"btn-toggle\"]').each(function () {\n        var group = $(this);\n        $(this).find(\".btn\").on('click', function (e) {\n            group.find(\".btn.active\").removeClass(\"active\");\n            $(this).addClass(\"active\");\n            e.preventDefault();\n        });\n    });\n});\n\n/* ----------------------------------\n * - Initialize the AdminLTE Object -\n * ----------------------------------\n * All AdminLTE functions are implemented below.\n */\nfunction _init() {\n    'use strict';\n    /* Layout\n     * ======\n     * Fixes the layout height in case min-height fails.\n     *\n     * @type Object\n     * @usage $.AdminLTE.layout.activate()\n     *        $.AdminLTE.layout.fix()\n     *        $.AdminLTE.layout.fixSidebar()\n     */\n\n    $.AdminLTE.layout = {\n        activate: function activate() {\n            var _this = this;\n            _this.fix();\n            _this.fixSidebar();\n            $(window, \".wrapper\").resize(function () {\n                _this.fix();\n                _this.fixSidebar();\n            });\n        },\n        fix: function fix() {\n            //Get window height and the wrapper height\n            var neg = $('.main-header').outerHeight() + $('.main-footer').outerHeight();\n            var window_height = $(window).height();\n            var sidebar_height = $(\".sidebar\").height();\n            //Set the min-height of the content and sidebar based on the\n            //the height of the document.\n            if ($(\"body\").hasClass(\"fixed\")) {\n                $(\".content-wrapper, .right-side\").css('min-height', window_height - $('.main-footer').outerHeight());\n            } else {\n                var postSetWidth;\n                if (window_height >= sidebar_height) {\n                    $(\".content-wrapper, .right-side\").css('min-height', window_height - neg);\n                    postSetWidth = window_height - neg;\n                } else {\n                    $(\".content-wrapper, .right-side\").css('min-height', sidebar_height);\n                    postSetWidth = sidebar_height;\n                }\n\n                //Fix for the control sidebar height\n                var controlSidebar = $($.AdminLTE.options.controlSidebarOptions.selector);\n                if (typeof controlSidebar !== \"undefined\") {\n                    if (controlSidebar.height() > postSetWidth) $(\".content-wrapper, .right-side\").css('min-height', controlSidebar.height());\n                }\n            }\n        },\n        fixSidebar: function fixSidebar() {\n            //Make sure the body tag has the .fixed class\n            if (!$(\"body\").hasClass(\"fixed\")) {\n                if (typeof $.fn.slimScroll != 'undefined') {\n                    $(\".sidebar\").slimScroll({ destroy: true }).height(\"auto\");\n                }\n                return;\n            } else if (typeof $.fn.slimScroll == 'undefined' && window.console) {\n                window.console.error(\"Error: the fixed layout requires the slimscroll plugin!\");\n            }\n            //Enable slimscroll for fixed layout\n            if ($.AdminLTE.options.sidebarSlimScroll) {\n                if (typeof $.fn.slimScroll != 'undefined') {\n                    //Destroy if it exists\n                    $(\".sidebar\").slimScroll({ destroy: true }).height(\"auto\");\n                    //Add slimscroll\n                    $(\".sidebar\").slimscroll({\n                        height: $(window).height() - $(\".main-header\").height() + \"px\",\n                        color: \"rgba(0,0,0,0.2)\",\n                        size: \"3px\"\n                    });\n                }\n            }\n        }\n    };\n\n    /* PushMenu()\n     * ==========\n     * Adds the push menu functionality to the sidebar.\n     *\n     * @type Function\n     * @usage: $.AdminLTE.pushMenu(\"[data-toggle='offcanvas']\")\n     */\n    $.AdminLTE.pushMenu = {\n        activate: function activate(toggleBtn) {\n            //Get the screen sizes\n            var screenSizes = $.AdminLTE.options.screenSizes;\n\n            //Enable sidebar toggle\n            $(document).on('click', toggleBtn, function (e) {\n                e.preventDefault();\n\n                //Enable sidebar push menu\n                if ($(window).width() > screenSizes.sm - 1) {\n                    if ($(\"body\").hasClass('sidebar-collapse')) {\n                        $(\"body\").removeClass('sidebar-collapse').trigger('expanded.pushMenu');\n                    } else {\n                        $(\"body\").addClass('sidebar-collapse').trigger('collapsed.pushMenu');\n                    }\n                }\n                //Handle sidebar push menu for small screens\n                else {\n                        if ($(\"body\").hasClass('sidebar-open')) {\n                            $(\"body\").removeClass('sidebar-open').removeClass('sidebar-collapse').trigger('collapsed.pushMenu');\n                        } else {\n                            $(\"body\").addClass('sidebar-open').trigger('expanded.pushMenu');\n                        }\n                    }\n            });\n\n            $(\".content-wrapper\").click(function () {\n                //Enable hide menu when clicking on the content-wrapper on small screens\n                if ($(window).width() <= screenSizes.sm - 1 && $(\"body\").hasClass(\"sidebar-open\")) {\n                    $(\"body\").removeClass('sidebar-open');\n                }\n            });\n\n            //Enable expand on hover for sidebar mini\n            if ($.AdminLTE.options.sidebarExpandOnHover || $('body').hasClass('fixed') && $('body').hasClass('sidebar-mini')) {\n                this.expandOnHover();\n            }\n        },\n        expandOnHover: function expandOnHover() {\n            var _this = this;\n            var screenWidth = $.AdminLTE.options.screenSizes.sm - 1;\n            //Expand sidebar on hover\n            $('.main-sidebar').hover(function () {\n                if ($('body').hasClass('sidebar-mini') && $(\"body\").hasClass('sidebar-collapse') && $(window).width() > screenWidth) {\n                    _this.expand();\n                }\n            }, function () {\n                if ($('body').hasClass('sidebar-mini') && $('body').hasClass('sidebar-expanded-on-hover') && $(window).width() > screenWidth) {\n                    _this.collapse();\n                }\n            });\n        },\n        expand: function expand() {\n            $(\"body\").removeClass('sidebar-collapse').addClass('sidebar-expanded-on-hover');\n        },\n        collapse: function collapse() {\n            if ($('body').hasClass('sidebar-expanded-on-hover')) {\n                $('body').removeClass('sidebar-expanded-on-hover').addClass('sidebar-collapse');\n            }\n        }\n    };\n\n    /* Tree()\n     * ======\n     * Converts the sidebar into a multilevel\n     * tree view menu.\n     *\n     * @type Function\n     * @Usage: $.AdminLTE.tree('.sidebar')\n     */\n    $.AdminLTE.tree = function (menu) {\n        var _this = this;\n        var animationSpeed = $.AdminLTE.options.animationSpeed;\n        $(document).off('click', menu + ' li a').on('click', menu + ' li a', function (e) {\n            //Get the clicked link and the next element\n            var $this = $(this);\n            var checkElement = $this.next();\n\n            //Check if the next element is a menu and is visible\n            if (checkElement.is('.treeview-menu') && checkElement.is(':visible') && !$('body').hasClass('sidebar-collapse')) {\n                //Close the menu\n                checkElement.slideUp(animationSpeed, function () {\n                    checkElement.removeClass('menu-open');\n                    //Fix the layout in case the sidebar stretches over the height of the window\n                    //_this.layout.fix();\n                });\n                checkElement.parent(\"li\").removeClass(\"active\");\n            }\n            //If the menu is not visible\n            else if (checkElement.is('.treeview-menu') && !checkElement.is(':visible')) {\n                    //Get the parent menu\n                    var parent = $this.parents('ul').first();\n                    //Close all open menus within the parent\n                    var ul = parent.find('ul:visible').slideUp(animationSpeed);\n                    //Remove the menu-open class from the parent\n                    ul.removeClass('menu-open');\n                    //Get the parent li\n                    var parent_li = $this.parent(\"li\");\n\n                    //Open the target menu and add the menu-open class\n                    checkElement.slideDown(animationSpeed, function () {\n                        //Add the class active to the parent li\n                        checkElement.addClass('menu-open');\n                        parent.find('li.active').removeClass('active');\n                        parent_li.addClass('active');\n                        //Fix the layout in case the sidebar stretches over the height of the window\n                        _this.layout.fix();\n                    });\n                }\n            //if this isn't a link, prevent the page from being redirected\n            if (checkElement.is('.treeview-menu')) {\n                e.preventDefault();\n            }\n        });\n    };\n\n    /* ControlSidebar\n     * ==============\n     * Adds functionality to the right sidebar\n     *\n     * @type Object\n     * @usage $.AdminLTE.controlSidebar.activate(options)\n     */\n    $.AdminLTE.controlSidebar = {\n        //instantiate the object\n        activate: function activate() {\n            //Get the object\n            var _this = this;\n            //Update options\n            var o = $.AdminLTE.options.controlSidebarOptions;\n            //Get the sidebar\n            var sidebar = $(o.selector);\n            //The toggle button\n            var btn = $(o.toggleBtnSelector);\n\n            //Listen to the click event\n            btn.on('click', function (e) {\n                e.preventDefault();\n                //If the sidebar is not open\n                if (!sidebar.hasClass('control-sidebar-open') && !$('body').hasClass('control-sidebar-open')) {\n                    //Open the sidebar\n                    _this.open(sidebar, o.slide);\n                } else {\n                    _this.close(sidebar, o.slide);\n                }\n            });\n\n            //If the body has a boxed layout, fix the sidebar bg position\n            var bg = $(\".control-sidebar-bg\");\n            _this._fix(bg);\n\n            //If the body has a fixed layout, make the control sidebar fixed\n            if ($('body').hasClass('fixed')) {\n                _this._fixForFixed(sidebar);\n            } else {\n                //If the content height is less than the sidebar's height, force max height\n                if ($('.content-wrapper, .right-side').height() < sidebar.height()) {\n                    _this._fixForContent(sidebar);\n                }\n            }\n        },\n        //Open the control sidebar\n        open: function open(sidebar, slide) {\n            //Slide over content\n            if (slide) {\n                sidebar.addClass('control-sidebar-open');\n            } else {\n                //Push the content by adding the open class to the body instead\n                //of the sidebar itself\n                $('body').addClass('control-sidebar-open');\n            }\n        },\n        //Close the control sidebar\n        close: function close(sidebar, slide) {\n            if (slide) {\n                sidebar.removeClass('control-sidebar-open');\n            } else {\n                $('body').removeClass('control-sidebar-open');\n            }\n        },\n        _fix: function _fix(sidebar) {\n            var _this = this;\n            if ($(\"body\").hasClass('layout-boxed')) {\n                sidebar.css('position', 'absolute');\n                sidebar.height($(\".wrapper\").height());\n                if (_this.hasBindedResize) {\n                    return;\n                }\n                $(window).resize(function () {\n                    _this._fix(sidebar);\n                });\n                _this.hasBindedResize = true;\n            } else {\n                sidebar.css({\n                    'position': 'fixed',\n                    'height': 'auto'\n                });\n            }\n        },\n        _fixForFixed: function _fixForFixed(sidebar) {\n            sidebar.css({\n                'position': 'fixed',\n                'max-height': '100%',\n                'overflow': 'auto',\n                'padding-bottom': '50px'\n            });\n        },\n        _fixForContent: function _fixForContent(sidebar) {\n            $(\".content-wrapper, .right-side\").css('min-height', sidebar.height());\n        }\n    };\n\n    /* BoxWidget\n     * =========\n     * BoxWidget is a plugin to handle collapsing and\n     * removing boxes from the screen.\n     *\n     * @type Object\n     * @usage $.AdminLTE.boxWidget.activate()\n     *        Set all your options in the main $.AdminLTE.options object\n     */\n    $.AdminLTE.boxWidget = {\n        selectors: $.AdminLTE.options.boxWidgetOptions.boxWidgetSelectors,\n        icons: $.AdminLTE.options.boxWidgetOptions.boxWidgetIcons,\n        animationSpeed: $.AdminLTE.options.animationSpeed,\n        activate: function activate(_box) {\n            var _this = this;\n            if (!_box) {\n                _box = document; // activate all boxes per default\n            }\n            //Listen for collapse event triggers\n            $(_box).on('click', _this.selectors.collapse, function (e) {\n                e.preventDefault();\n                _this.collapse($(this));\n            });\n\n            //Listen for remove event triggers\n            $(_box).on('click', _this.selectors.remove, function (e) {\n                e.preventDefault();\n                _this.remove($(this));\n            });\n        },\n        collapse: function collapse(element) {\n            var _this = this;\n            //Find the box parent\n            var box = element.parents(\".box\").first();\n            //Find the body and the footer\n            var box_content = box.find(\"> .box-body, > .box-footer, > form  >.box-body, > form > .box-footer\");\n            if (!box.hasClass(\"collapsed-box\")) {\n                //Convert minus into plus\n                element.children(\":first\").removeClass(_this.icons.collapse).addClass(_this.icons.open);\n                //Hide the content\n                box_content.slideUp(_this.animationSpeed, function () {\n                    box.addClass(\"collapsed-box\");\n                });\n            } else {\n                //Convert plus into minus\n                element.children(\":first\").removeClass(_this.icons.open).addClass(_this.icons.collapse);\n                //Show the content\n                box_content.slideDown(_this.animationSpeed, function () {\n                    box.removeClass(\"collapsed-box\");\n                });\n            }\n        },\n        remove: function remove(element) {\n            //Find the box parent\n            var box = element.parents(\".box\").first();\n            box.slideUp(this.animationSpeed);\n        }\n    };\n}\n\n/* ------------------\n * - Custom Plugins -\n * ------------------\n * All custom plugins are defined below.\n */\n\n/*\n * BOX REFRESH BUTTON\n * ------------------\n * This is a custom plugin to use with the component BOX. It allows you to add\n * a refresh button to the box. It converts the box's state to a loading state.\n *\n * @type plugin\n * @usage $(\"#box-widget\").boxRefresh( options );\n */\n(function ($) {\n\n    \"use strict\";\n\n    $.fn.boxRefresh = function (options) {\n\n        // Render options\n        var settings = $.extend({\n            //Refresh button selector\n            trigger: \".refresh-btn\",\n            //File source to be loaded (e.g: ajax/src.php)\n            source: \"\",\n            //Callbacks\n            onLoadStart: function onLoadStart(box) {\n                return box;\n            }, //Right after the button has been clicked\n            onLoadDone: function onLoadDone(box) {\n                return box;\n            } //When the source has been loaded\n\n        }, options);\n\n        //The overlay\n        var overlay = $('<div class=\"overlay\"><div class=\"fa fa-refresh fa-spin\"></div></div>');\n\n        return this.each(function () {\n            //if a source is specified\n            if (settings.source === \"\") {\n                if (window.console) {\n                    window.console.log(\"Please specify a source first - boxRefresh()\");\n                }\n                return;\n            }\n            //the box\n            var box = $(this);\n            //the button\n            var rBtn = box.find(settings.trigger).first();\n\n            //On trigger click\n            rBtn.on('click', function (e) {\n                e.preventDefault();\n                //Add loading overlay\n                start(box);\n\n                //Perform ajax call\n                box.find(\".box-body\").load(settings.source, function () {\n                    done(box);\n                });\n            });\n        });\n\n        function start(box) {\n            //Add overlay and loading img\n            box.append(overlay);\n\n            settings.onLoadStart.call(box);\n        }\n\n        function done(box) {\n            //Remove overlay and loading img\n            box.find(overlay).remove();\n\n            settings.onLoadDone.call(box);\n        }\n    };\n})(jQuery);\n\n/*\n * EXPLICIT BOX CONTROLS\n * -----------------------\n * This is a custom plugin to use with the component BOX. It allows you to activate\n * a box inserted in the DOM after the app.js was loaded, toggle and remove box.\n *\n * @type plugin\n * @usage $(\"#box-widget\").activateBox();\n * @usage $(\"#box-widget\").toggleBox();\n * @usage $(\"#box-widget\").removeBox();\n */\n(function ($) {\n\n    'use strict';\n\n    $.fn.activateBox = function () {\n        $.AdminLTE.boxWidget.activate(this);\n    };\n\n    $.fn.toggleBox = function () {\n        var button = $($.AdminLTE.boxWidget.selectors.collapse, this);\n        $.AdminLTE.boxWidget.collapse(button);\n    };\n\n    $.fn.removeBox = function () {\n        var button = $($.AdminLTE.boxWidget.selectors.remove, this);\n        $.AdminLTE.boxWidget.remove(button);\n    };\n})(jQuery);\n\n/*\n * TODO LIST CUSTOM PLUGIN\n * -----------------------\n * This plugin depends on iCheck plugin for checkbox and radio inputs\n *\n * @type plugin\n * @usage $(\"#todo-widget\").todolist( options );\n */\n(function ($) {\n\n    'use strict';\n\n    $.fn.todolist = function (options) {\n        // Render options\n        var settings = $.extend({\n            //When the user checks the input\n            onCheck: function onCheck(ele) {\n                return ele;\n            },\n            //When the user unchecks the input\n            onUncheck: function onUncheck(ele) {\n                return ele;\n            }\n        }, options);\n\n        return this.each(function () {\n\n            if (typeof $.fn.iCheck != 'undefined') {\n                $('input', this).on('ifChecked', function () {\n                    var ele = $(this).parents(\"li\").first();\n                    ele.toggleClass(\"done\");\n                    settings.onCheck.call(ele);\n                });\n\n                $('input', this).on('ifUnchecked', function () {\n                    var ele = $(this).parents(\"li\").first();\n                    ele.toggleClass(\"done\");\n                    settings.onUncheck.call(ele);\n                });\n            } else {\n                $('input', this).on('change', function () {\n                    var ele = $(this).parents(\"li\").first();\n                    ele.toggleClass(\"done\");\n                    if ($('input', ele).is(\":checked\")) {\n                        settings.onCheck.call(ele);\n                    } else {\n                        settings.onUncheck.call(ele);\n                    }\n                });\n            }\n        });\n    };\n})(jQuery);\n\n/**\n * Allows you to add data-method=\"METHOD to links to automatically inject a form\n * with the method on click\n *\n * Example: <a href=\"{{route('customers.destroy', $customer->id)}}\"\n * data-method=\"delete\" name=\"delete_item\">Delete</a>\n *\n * Injects a form with that's fired on click of the link with a DELETE request.\n * Good because you don't have to dirty your HTML with delete forms everywhere.\n */\nfunction addDeleteForms() {\n    $('[data-method]').append(function () {\n        if (!$(this).find('form').length > 0) return \"\\n\" + \"<form action='\" + $(this).attr('href') + \"' method='POST' name='delete_item' style='display:none'>\\n\" + \"   <input type='hidden' name='_method' value='\" + $(this).attr('data-method') + \"'>\\n\" + \"   <input type='hidden' name='_token' value='\" + APP.csrfToken + \"'>\\n\" + \"</form>\\n\";else return \"\";\n    }).removeAttr('href').attr('style', 'cursor:pointer;').attr('onclick', '$(this).find(\"form\").submit();');\n}\n\n/**\n * Place any jQuery/helper plugins in here.\n */\n$(function () {\n    /**\n     * Place the CSRF token as a header on all pages for access in AJAX requests\n     */\n    $.ajaxSetup({\n        headers: {\n            'X-CSRF-TOKEN': $('meta[name=\"_token\"]').attr('content')\n        }\n    });\n\n    /**\n     * Add the data-method=\"delete\" forms to all delete links\n     */\n    addDeleteForms();\n\n    /**\n     * This is for delete buttons that are loaded via AJAX in datatables, they will not work right\n     * without this block of code\n     */\n    $(document).ajaxComplete(function () {\n        addDeleteForms();\n    });\n\n    /**\n     * Generic confirm form delete using Sweet Alert\n     */\n    $('body').on('submit', 'form[name=delete_item]', function (e) {\n        e.preventDefault();\n        var form = this;\n        var link = $('a[data-method=\"delete\"]');\n        var cancel = link.attr('data-trans-button-cancel') ? link.attr('data-trans-button-cancel') : \"Cancel\";\n        var confirm = link.attr('data-trans-button-confirm') ? link.attr('data-trans-button-confirm') : \"Yes, delete\";\n        var title = link.attr('data-trans-title') ? link.attr('data-trans-title') : \"Warning\";\n        var text = link.attr('data-trans-text') ? link.attr('data-trans-text') : \"Are you sure you want to delete this item?\";\n\n        swal({\n            title: title,\n            type: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: cancel,\n            confirmButtonColor: \"#DD6B55\",\n            confirmButtonText: confirm,\n            closeOnConfirm: true\n        }, function (confirmed) {\n            if (confirmed) form.submit();\n        });\n    });\n\n    /**\n     * Bind all bootstrap tooltips\n     */\n    $(\"[data-toggle=\\\"tooltip\\\"]\").tooltip();\n\n    /**\n     * Bind all bootstrap popovers\n     */\n    $(\"[data-toggle=\\\"popover\\\"]\").popover();\n\n    /**\n     * This closes the popover when its clicked away from\n     */\n    $('body').on('click', function (e) {\n        $('[data-toggle=\"popover\"]').each(function () {\n            if (!$(this).is(e.target) && $(this).has(e.target).length === 0 && $('.popover').has(e.target).length === 0) {\n                $(this).popover('hide');\n            }\n        });\n    });\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9yZXNvdXJjZXMvYXNzZXRzL2pzL2FkbWluL2FwcC5qcz8zYzlmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiEgQWRtaW5MVEUgYXBwLmpzXG4gKiA9PT09PT09PT09PT09PT09XG4gKiBNYWluIEpTIGFwcGxpY2F0aW9uIGZpbGUgZm9yIEFkbWluTFRFIHYyLiBUaGlzIGZpbGVcbiAqIHNob3VsZCBiZSBpbmNsdWRlZCBpbiBhbGwgcGFnZXMuIEl0IGNvbnRyb2xzIHNvbWUgbGF5b3V0XG4gKiBvcHRpb25zIGFuZCBpbXBsZW1lbnRzIGV4Y2x1c2l2ZSBBZG1pbkxURSBwbHVnaW5zLlxuICpcbiAqIEBBdXRob3IgIEFsbXNhZWVkIFN0dWRpb1xuICogQFN1cHBvcnQgPGh0dHA6Ly93d3cuYWxtc2FlZWRzdHVkaW8uY29tPlxuICogQEVtYWlsICAgPGFiZHVsbGFoQGFsbXNhZWVkc3R1ZGlvLmNvbT5cbiAqIEB2ZXJzaW9uIDIuMy42XG4gKiBAbGljZW5zZSBNSVQgPGh0dHA6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9NSVQ+XG4gKi9cblxuLy9NYWtlIHN1cmUgalF1ZXJ5IGhhcyBiZWVuIGxvYWRlZCBiZWZvcmUgYXBwLmpzXG5cbmlmICh0eXBlb2YgalF1ZXJ5ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQWRtaW5MVEUgcmVxdWlyZXMgalF1ZXJ5XCIpO1xufVxuXG4vKiBBZG1pbkxURVxuICpcbiAqIEB0eXBlIE9iamVjdFxuICogQGRlc2NyaXB0aW9uICQuQWRtaW5MVEUgaXMgdGhlIG1haW4gb2JqZWN0IGZvciB0aGUgdGVtcGxhdGUncyBhcHAuXG4gKiAgICAgICAgICAgICAgSXQncyB1c2VkIGZvciBpbXBsZW1lbnRpbmcgZnVuY3Rpb25zIGFuZCBvcHRpb25zIHJlbGF0ZWRcbiAqICAgICAgICAgICAgICB0byB0aGUgdGVtcGxhdGUuIEtlZXBpbmcgZXZlcnl0aGluZyB3cmFwcGVkIGluIGFuIG9iamVjdFxuICogICAgICAgICAgICAgIHByZXZlbnRzIGNvbmZsaWN0IHdpdGggb3RoZXIgcGx1Z2lucyBhbmQgaXMgYSBiZXR0ZXJcbiAqICAgICAgICAgICAgICB3YXkgdG8gb3JnYW5pemUgb3VyIGNvZGUuXG4gKi9cbiQuQWRtaW5MVEUgPSB7fTtcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIC0gQWRtaW5MVEUgT3B0aW9ucyAtXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogTW9kaWZ5IHRoZXNlIG9wdGlvbnMgdG8gc3VpdCB5b3VyIGltcGxlbWVudGF0aW9uXG4gKi9cbiQuQWRtaW5MVEUub3B0aW9ucyA9IHtcbiAgICAvL0FkZCBzbGltc2Nyb2xsIHRvIG5hdmJhciBtZW51c1xuICAgIC8vVGhpcyByZXF1aXJlcyB5b3UgdG8gbG9hZCB0aGUgc2xpbXNjcm9sbCBwbHVnaW5cbiAgICAvL2luIGV2ZXJ5IHBhZ2UgYmVmb3JlIGFwcC5qc1xuICAgIG5hdmJhck1lbnVTbGltc2Nyb2xsOiB0cnVlLFxuICAgIG5hdmJhck1lbnVTbGltc2Nyb2xsV2lkdGg6IFwiM3B4XCIsIC8vVGhlIHdpZHRoIG9mIHRoZSBzY3JvbGwgYmFyXG4gICAgbmF2YmFyTWVudUhlaWdodDogXCIyMDBweFwiLCAvL1RoZSBoZWlnaHQgb2YgdGhlIGlubmVyIG1lbnVcbiAgICAvL0dlbmVyYWwgYW5pbWF0aW9uIHNwZWVkIGZvciBKUyBhbmltYXRlZCBlbGVtZW50cyBzdWNoIGFzIGJveCBjb2xsYXBzZS9leHBhbmQgYW5kXG4gICAgLy9zaWRlYmFyIHRyZWV2aWV3IHNsaWRlIHVwL2Rvd24uIFRoaXMgb3B0aW9ucyBhY2NlcHRzIGFuIGludGVnZXIgYXMgbWlsbGlzZWNvbmRzLFxuICAgIC8vJ2Zhc3QnLCAnbm9ybWFsJywgb3IgJ3Nsb3cnXG4gICAgYW5pbWF0aW9uU3BlZWQ6IDUwMCxcbiAgICAvL1NpZGViYXIgcHVzaCBtZW51IHRvZ2dsZSBidXR0b24gc2VsZWN0b3JcbiAgICBzaWRlYmFyVG9nZ2xlU2VsZWN0b3I6IFwiW2RhdGEtdG9nZ2xlPSdvZmZjYW52YXMnXVwiLFxuICAgIC8vQWN0aXZhdGUgc2lkZWJhciBwdXNoIG1lbnVcbiAgICBzaWRlYmFyUHVzaE1lbnU6IHRydWUsXG4gICAgLy9BY3RpdmF0ZSBzaWRlYmFyIHNsaW1zY3JvbGwgaWYgdGhlIGZpeGVkIGxheW91dCBpcyBzZXQgKHJlcXVpcmVzIFNsaW1TY3JvbGwgUGx1Z2luKVxuICAgIHNpZGViYXJTbGltU2Nyb2xsOiB0cnVlLFxuICAgIC8vRW5hYmxlIHNpZGViYXIgZXhwYW5kIG9uIGhvdmVyIGVmZmVjdCBmb3Igc2lkZWJhciBtaW5pXG4gICAgLy9UaGlzIG9wdGlvbiBpcyBmb3JjZWQgdG8gdHJ1ZSBpZiBib3RoIHRoZSBmaXhlZCBsYXlvdXQgYW5kIHNpZGViYXIgbWluaVxuICAgIC8vYXJlIHVzZWQgdG9nZXRoZXJcbiAgICBzaWRlYmFyRXhwYW5kT25Ib3ZlcjogZmFsc2UsXG4gICAgLy9Cb3hSZWZyZXNoIFBsdWdpblxuICAgIGVuYWJsZUJveFJlZnJlc2g6IHRydWUsXG4gICAgLy9Cb290c3RyYXAuanMgdG9vbHRpcFxuICAgIGVuYWJsZUJTVG9wcGx0aXA6IHRydWUsXG4gICAgQlNUb29sdGlwU2VsZWN0b3I6IFwiW2RhdGEtdG9nZ2xlPSd0b29sdGlwJ11cIixcbiAgICAvL0VuYWJsZSBGYXN0IENsaWNrLiBGYXN0Y2xpY2suanMgY3JlYXRlcyBhIG1vcmVcbiAgICAvL25hdGl2ZSB0b3VjaCBleHBlcmllbmNlIHdpdGggdG91Y2ggZGV2aWNlcy4gSWYgeW91XG4gICAgLy9jaG9vc2UgdG8gZW5hYmxlIHRoZSBwbHVnaW4sIG1ha2Ugc3VyZSB5b3UgbG9hZCB0aGUgc2NyaXB0XG4gICAgLy9iZWZvcmUgQWRtaW5MVEUncyBhcHAuanNcbiAgICBlbmFibGVGYXN0Y2xpY2s6IGZhbHNlLFxuICAgIC8vQ29udHJvbCBTaWRlYmFyIE9wdGlvbnNcbiAgICBlbmFibGVDb250cm9sU2lkZWJhcjogdHJ1ZSxcbiAgICBjb250cm9sU2lkZWJhck9wdGlvbnM6IHtcbiAgICAgICAgLy9XaGljaCBidXR0b24gc2hvdWxkIHRyaWdnZXIgdGhlIG9wZW4vY2xvc2UgZXZlbnRcbiAgICAgICAgdG9nZ2xlQnRuU2VsZWN0b3I6IFwiW2RhdGEtdG9nZ2xlPSdjb250cm9sLXNpZGViYXInXVwiLFxuICAgICAgICAvL1RoZSBzaWRlYmFyIHNlbGVjdG9yXG4gICAgICAgIHNlbGVjdG9yOiBcIi5jb250cm9sLXNpZGViYXJcIixcbiAgICAgICAgLy9FbmFibGUgc2xpZGUgb3ZlciBjb250ZW50XG4gICAgICAgIHNsaWRlOiB0cnVlXG4gICAgfSxcbiAgICAvL0JveCBXaWRnZXQgUGx1Z2luLiBFbmFibGUgdGhpcyBwbHVnaW5cbiAgICAvL3RvIGFsbG93IGJveGVzIHRvIGJlIGNvbGxhcHNlZCBhbmQvb3IgcmVtb3ZlZFxuICAgIGVuYWJsZUJveFdpZGdldDogdHJ1ZSxcbiAgICAvL0JveCBXaWRnZXQgcGx1Z2luIG9wdGlvbnNcbiAgICBib3hXaWRnZXRPcHRpb25zOiB7XG4gICAgICAgIGJveFdpZGdldEljb25zOiB7XG4gICAgICAgICAgICAvL0NvbGxhcHNlIGljb25cbiAgICAgICAgICAgIGNvbGxhcHNlOiAnZmEtbWludXMnLFxuICAgICAgICAgICAgLy9PcGVuIGljb25cbiAgICAgICAgICAgIG9wZW46ICdmYS1wbHVzJyxcbiAgICAgICAgICAgIC8vUmVtb3ZlIGljb25cbiAgICAgICAgICAgIHJlbW92ZTogJ2ZhLXRpbWVzJ1xuICAgICAgICB9LFxuICAgICAgICBib3hXaWRnZXRTZWxlY3RvcnM6IHtcbiAgICAgICAgICAgIC8vUmVtb3ZlIGJ1dHRvbiBzZWxlY3RvclxuICAgICAgICAgICAgcmVtb3ZlOiAnW2RhdGEtd2lkZ2V0PVwicmVtb3ZlXCJdJyxcbiAgICAgICAgICAgIC8vQ29sbGFwc2UgYnV0dG9uIHNlbGVjdG9yXG4gICAgICAgICAgICBjb2xsYXBzZTogJ1tkYXRhLXdpZGdldD1cImNvbGxhcHNlXCJdJ1xuICAgICAgICB9XG4gICAgfSxcbiAgICAvL0RpcmVjdCBDaGF0IHBsdWdpbiBvcHRpb25zXG4gICAgZGlyZWN0Q2hhdDoge1xuICAgICAgICAvL0VuYWJsZSBkaXJlY3QgY2hhdCBieSBkZWZhdWx0XG4gICAgICAgIGVuYWJsZTogdHJ1ZSxcbiAgICAgICAgLy9UaGUgYnV0dG9uIHRvIG9wZW4gYW5kIGNsb3NlIHRoZSBjaGF0IGNvbnRhY3RzIHBhbmVcbiAgICAgICAgY29udGFjdFRvZ2dsZVNlbGVjdG9yOiAnW2RhdGEtd2lkZ2V0PVwiY2hhdC1wYW5lLXRvZ2dsZVwiXSdcbiAgICB9LFxuICAgIC8vRGVmaW5lIHRoZSBzZXQgb2YgY29sb3JzIHRvIHVzZSBnbG9iYWxseSBhcm91bmQgdGhlIHdlYnNpdGVcbiAgICBjb2xvcnM6IHtcbiAgICAgICAgbGlnaHRCbHVlOiBcIiMzYzhkYmNcIixcbiAgICAgICAgcmVkOiBcIiNmNTY5NTRcIixcbiAgICAgICAgZ3JlZW46IFwiIzAwYTY1YVwiLFxuICAgICAgICBhcXVhOiBcIiMwMGMwZWZcIixcbiAgICAgICAgeWVsbG93OiBcIiNmMzljMTJcIixcbiAgICAgICAgYmx1ZTogXCIjMDA3M2I3XCIsXG4gICAgICAgIG5hdnk6IFwiIzAwMUYzRlwiLFxuICAgICAgICB0ZWFsOiBcIiMzOUNDQ0NcIixcbiAgICAgICAgb2xpdmU6IFwiIzNEOTk3MFwiLFxuICAgICAgICBsaW1lOiBcIiMwMUZGNzBcIixcbiAgICAgICAgb3JhbmdlOiBcIiNGRjg1MUJcIixcbiAgICAgICAgZnVjaHNpYTogXCIjRjAxMkJFXCIsXG4gICAgICAgIHB1cnBsZTogXCIjOEUyNEFBXCIsXG4gICAgICAgIG1hcm9vbjogXCIjRDgxQjYwXCIsXG4gICAgICAgIGJsYWNrOiBcIiMyMjIyMjJcIixcbiAgICAgICAgZ3JheTogXCIjZDJkNmRlXCJcbiAgICB9LFxuICAgIC8vVGhlIHN0YW5kYXJkIHNjcmVlbiBzaXplcyB0aGF0IGJvb3RzdHJhcCB1c2VzLlxuICAgIC8vSWYgeW91IGNoYW5nZSB0aGVzZSBpbiB0aGUgdmFyaWFibGVzLmxlc3MgZmlsZSwgY2hhbmdlXG4gICAgLy90aGVtIGhlcmUgdG9vLlxuICAgIHNjcmVlblNpemVzOiB7XG4gICAgICAgIHhzOiA0ODAsXG4gICAgICAgIHNtOiA3NjgsXG4gICAgICAgIG1kOiA5OTIsXG4gICAgICAgIGxnOiAxMjAwXG4gICAgfVxufTtcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAtIEltcGxlbWVudGF0aW9uIC1cbiAqIC0tLS0tLS0tLS0tLS0tLS0tLVxuICogVGhlIG5leHQgYmxvY2sgb2YgY29kZSBpbXBsZW1lbnRzIEFkbWluTFRFJ3NcbiAqIGZ1bmN0aW9ucyBhbmQgcGx1Z2lucyBhcyBzcGVjaWZpZWQgYnkgdGhlXG4gKiBvcHRpb25zIGFib3ZlLlxuICovXG4kKGZ1bmN0aW9uICgpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgIC8vRml4IGZvciBJRSBwYWdlIHRyYW5zaXRpb25zXG5cbiAgICAkKFwiYm9keVwiKS5yZW1vdmVDbGFzcyhcImhvbGQtdHJhbnNpdGlvblwiKTtcblxuICAgIC8vRXh0ZW5kIG9wdGlvbnMgaWYgZXh0ZXJuYWwgb3B0aW9ucyBleGlzdFxuICAgIGlmICh0eXBlb2YgQWRtaW5MVEVPcHRpb25zICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICQuZXh0ZW5kKHRydWUsICQuQWRtaW5MVEUub3B0aW9ucywgQWRtaW5MVEVPcHRpb25zKTtcbiAgICB9XG5cbiAgICAvL0Vhc3kgYWNjZXNzIHRvIG9wdGlvbnNcbiAgICB2YXIgbyA9ICQuQWRtaW5MVEUub3B0aW9ucztcblxuICAgIC8vU2V0IHVwIHRoZSBvYmplY3RcbiAgICBfaW5pdCgpO1xuXG4gICAgLy9BY3RpdmF0ZSB0aGUgbGF5b3V0IG1ha2VyXG4gICAgJC5BZG1pbkxURS5sYXlvdXQuYWN0aXZhdGUoKTtcblxuICAgIC8vRW5hYmxlIHNpZGViYXIgdHJlZSB2aWV3IGNvbnRyb2xzXG4gICAgJC5BZG1pbkxURS50cmVlKCcuc2lkZWJhcicpO1xuXG4gICAgLy9FbmFibGUgY29udHJvbCBzaWRlYmFyXG4gICAgaWYgKG8uZW5hYmxlQ29udHJvbFNpZGViYXIpIHtcbiAgICAgICAgJC5BZG1pbkxURS5jb250cm9sU2lkZWJhci5hY3RpdmF0ZSgpO1xuICAgIH1cblxuICAgIC8vQWRkIHNsaW1zY3JvbGwgdG8gbmF2YmFyIGRyb3Bkb3duXG4gICAgaWYgKG8ubmF2YmFyTWVudVNsaW1zY3JvbGwgJiYgdHlwZW9mICQuZm4uc2xpbXNjcm9sbCAhPSAndW5kZWZpbmVkJykge1xuICAgICAgICAkKFwiLm5hdmJhciAubWVudVwiKS5zbGltc2Nyb2xsKHtcbiAgICAgICAgICAgIGhlaWdodDogby5uYXZiYXJNZW51SGVpZ2h0LFxuICAgICAgICAgICAgYWx3YXlzVmlzaWJsZTogZmFsc2UsXG4gICAgICAgICAgICBzaXplOiBvLm5hdmJhck1lbnVTbGltc2Nyb2xsV2lkdGhcbiAgICAgICAgfSkuY3NzKFwid2lkdGhcIiwgXCIxMDAlXCIpO1xuICAgIH1cblxuICAgIC8vQWN0aXZhdGUgc2lkZWJhciBwdXNoIG1lbnVcbiAgICBpZiAoby5zaWRlYmFyUHVzaE1lbnUpIHtcbiAgICAgICAgJC5BZG1pbkxURS5wdXNoTWVudS5hY3RpdmF0ZShvLnNpZGViYXJUb2dnbGVTZWxlY3Rvcik7XG4gICAgfVxuXG4gICAgLy9BY3RpdmF0ZSBCb290c3RyYXAgdG9vbHRpcFxuICAgIGlmIChvLmVuYWJsZUJTVG9wcGx0aXApIHtcbiAgICAgICAgJCgnYm9keScpLnRvb2x0aXAoe1xuICAgICAgICAgICAgc2VsZWN0b3I6IG8uQlNUb29sdGlwU2VsZWN0b3JcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy9BY3RpdmF0ZSBib3ggd2lkZ2V0XG4gICAgaWYgKG8uZW5hYmxlQm94V2lkZ2V0KSB7XG4gICAgICAgICQuQWRtaW5MVEUuYm94V2lkZ2V0LmFjdGl2YXRlKCk7XG4gICAgfVxuXG4gICAgLy9BY3RpdmF0ZSBmYXN0IGNsaWNrXG4gICAgaWYgKG8uZW5hYmxlRmFzdGNsaWNrICYmIHR5cGVvZiBGYXN0Q2xpY2sgIT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgRmFzdENsaWNrLmF0dGFjaChkb2N1bWVudC5ib2R5KTtcbiAgICB9XG5cbiAgICAvL0FjdGl2YXRlIGRpcmVjdCBjaGF0IHdpZGdldFxuICAgIGlmIChvLmRpcmVjdENoYXQuZW5hYmxlKSB7XG4gICAgICAgICQoZG9jdW1lbnQpLm9uKCdjbGljaycsIG8uZGlyZWN0Q2hhdC5jb250YWN0VG9nZ2xlU2VsZWN0b3IsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBib3ggPSAkKHRoaXMpLnBhcmVudHMoJy5kaXJlY3QtY2hhdCcpLmZpcnN0KCk7XG4gICAgICAgICAgICBib3gudG9nZ2xlQ2xhc3MoJ2RpcmVjdC1jaGF0LWNvbnRhY3RzLW9wZW4nKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLypcbiAgICAgKiBJTklUSUFMSVpFIEJVVFRPTiBUT0dHTEVcbiAgICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgKi9cbiAgICAkKCcuYnRuLWdyb3VwW2RhdGEtdG9nZ2xlPVwiYnRuLXRvZ2dsZVwiXScpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZ3JvdXAgPSAkKHRoaXMpO1xuICAgICAgICAkKHRoaXMpLmZpbmQoXCIuYnRuXCIpLm9uKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBncm91cC5maW5kKFwiLmJ0bi5hY3RpdmVcIikucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XG4gICAgICAgICAgICAkKHRoaXMpLmFkZENsYXNzKFwiYWN0aXZlXCIpO1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn0pO1xuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAtIEluaXRpYWxpemUgdGhlIEFkbWluTFRFIE9iamVjdCAtXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBBbGwgQWRtaW5MVEUgZnVuY3Rpb25zIGFyZSBpbXBsZW1lbnRlZCBiZWxvdy5cbiAqL1xuZnVuY3Rpb24gX2luaXQoKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuICAgIC8qIExheW91dFxuICAgICAqID09PT09PVxuICAgICAqIEZpeGVzIHRoZSBsYXlvdXQgaGVpZ2h0IGluIGNhc2UgbWluLWhlaWdodCBmYWlscy5cbiAgICAgKlxuICAgICAqIEB0eXBlIE9iamVjdFxuICAgICAqIEB1c2FnZSAkLkFkbWluTFRFLmxheW91dC5hY3RpdmF0ZSgpXG4gICAgICogICAgICAgICQuQWRtaW5MVEUubGF5b3V0LmZpeCgpXG4gICAgICogICAgICAgICQuQWRtaW5MVEUubGF5b3V0LmZpeFNpZGViYXIoKVxuICAgICAqL1xuXG4gICAgJC5BZG1pbkxURS5sYXlvdXQgPSB7XG4gICAgICAgIGFjdGl2YXRlOiBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcbiAgICAgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgICAgICBfdGhpcy5maXgoKTtcbiAgICAgICAgICAgIF90aGlzLmZpeFNpZGViYXIoKTtcbiAgICAgICAgICAgICQod2luZG93LCBcIi53cmFwcGVyXCIpLnJlc2l6ZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuZml4KCk7XG4gICAgICAgICAgICAgICAgX3RoaXMuZml4U2lkZWJhcigpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIGZpeDogZnVuY3Rpb24gZml4KCkge1xuICAgICAgICAgICAgLy9HZXQgd2luZG93IGhlaWdodCBhbmQgdGhlIHdyYXBwZXIgaGVpZ2h0XG4gICAgICAgICAgICB2YXIgbmVnID0gJCgnLm1haW4taGVhZGVyJykub3V0ZXJIZWlnaHQoKSArICQoJy5tYWluLWZvb3RlcicpLm91dGVySGVpZ2h0KCk7XG4gICAgICAgICAgICB2YXIgd2luZG93X2hlaWdodCA9ICQod2luZG93KS5oZWlnaHQoKTtcbiAgICAgICAgICAgIHZhciBzaWRlYmFyX2hlaWdodCA9ICQoXCIuc2lkZWJhclwiKS5oZWlnaHQoKTtcbiAgICAgICAgICAgIC8vU2V0IHRoZSBtaW4taGVpZ2h0IG9mIHRoZSBjb250ZW50IGFuZCBzaWRlYmFyIGJhc2VkIG9uIHRoZVxuICAgICAgICAgICAgLy90aGUgaGVpZ2h0IG9mIHRoZSBkb2N1bWVudC5cbiAgICAgICAgICAgIGlmICgkKFwiYm9keVwiKS5oYXNDbGFzcyhcImZpeGVkXCIpKSB7XG4gICAgICAgICAgICAgICAgJChcIi5jb250ZW50LXdyYXBwZXIsIC5yaWdodC1zaWRlXCIpLmNzcygnbWluLWhlaWdodCcsIHdpbmRvd19oZWlnaHQgLSAkKCcubWFpbi1mb290ZXInKS5vdXRlckhlaWdodCgpKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFyIHBvc3RTZXRXaWR0aDtcbiAgICAgICAgICAgICAgICBpZiAod2luZG93X2hlaWdodCA+PSBzaWRlYmFyX2hlaWdodCkge1xuICAgICAgICAgICAgICAgICAgICAkKFwiLmNvbnRlbnQtd3JhcHBlciwgLnJpZ2h0LXNpZGVcIikuY3NzKCdtaW4taGVpZ2h0Jywgd2luZG93X2hlaWdodCAtIG5lZyk7XG4gICAgICAgICAgICAgICAgICAgIHBvc3RTZXRXaWR0aCA9IHdpbmRvd19oZWlnaHQgLSBuZWc7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgJChcIi5jb250ZW50LXdyYXBwZXIsIC5yaWdodC1zaWRlXCIpLmNzcygnbWluLWhlaWdodCcsIHNpZGViYXJfaGVpZ2h0KTtcbiAgICAgICAgICAgICAgICAgICAgcG9zdFNldFdpZHRoID0gc2lkZWJhcl9oZWlnaHQ7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy9GaXggZm9yIHRoZSBjb250cm9sIHNpZGViYXIgaGVpZ2h0XG4gICAgICAgICAgICAgICAgdmFyIGNvbnRyb2xTaWRlYmFyID0gJCgkLkFkbWluTFRFLm9wdGlvbnMuY29udHJvbFNpZGViYXJPcHRpb25zLnNlbGVjdG9yKTtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRyb2xTaWRlYmFyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjb250cm9sU2lkZWJhci5oZWlnaHQoKSA+IHBvc3RTZXRXaWR0aCkgJChcIi5jb250ZW50LXdyYXBwZXIsIC5yaWdodC1zaWRlXCIpLmNzcygnbWluLWhlaWdodCcsIGNvbnRyb2xTaWRlYmFyLmhlaWdodCgpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGZpeFNpZGViYXI6IGZ1bmN0aW9uIGZpeFNpZGViYXIoKSB7XG4gICAgICAgICAgICAvL01ha2Ugc3VyZSB0aGUgYm9keSB0YWcgaGFzIHRoZSAuZml4ZWQgY2xhc3NcbiAgICAgICAgICAgIGlmICghJChcImJvZHlcIikuaGFzQ2xhc3MoXCJmaXhlZFwiKSkge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgJC5mbi5zbGltU2Nyb2xsICE9ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgICQoXCIuc2lkZWJhclwiKS5zbGltU2Nyb2xsKHsgZGVzdHJveTogdHJ1ZSB9KS5oZWlnaHQoXCJhdXRvXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiAkLmZuLnNsaW1TY3JvbGwgPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmNvbnNvbGUpIHtcbiAgICAgICAgICAgICAgICB3aW5kb3cuY29uc29sZS5lcnJvcihcIkVycm9yOiB0aGUgZml4ZWQgbGF5b3V0IHJlcXVpcmVzIHRoZSBzbGltc2Nyb2xsIHBsdWdpbiFcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvL0VuYWJsZSBzbGltc2Nyb2xsIGZvciBmaXhlZCBsYXlvdXRcbiAgICAgICAgICAgIGlmICgkLkFkbWluTFRFLm9wdGlvbnMuc2lkZWJhclNsaW1TY3JvbGwpIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mICQuZm4uc2xpbVNjcm9sbCAhPSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgICAgICAvL0Rlc3Ryb3kgaWYgaXQgZXhpc3RzXG4gICAgICAgICAgICAgICAgICAgICQoXCIuc2lkZWJhclwiKS5zbGltU2Nyb2xsKHsgZGVzdHJveTogdHJ1ZSB9KS5oZWlnaHQoXCJhdXRvXCIpO1xuICAgICAgICAgICAgICAgICAgICAvL0FkZCBzbGltc2Nyb2xsXG4gICAgICAgICAgICAgICAgICAgICQoXCIuc2lkZWJhclwiKS5zbGltc2Nyb2xsKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogJCh3aW5kb3cpLmhlaWdodCgpIC0gJChcIi5tYWluLWhlYWRlclwiKS5oZWlnaHQoKSArIFwicHhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiBcInJnYmEoMCwwLDAsMC4yKVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZTogXCIzcHhcIlxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLyogUHVzaE1lbnUoKVxuICAgICAqID09PT09PT09PT1cbiAgICAgKiBBZGRzIHRoZSBwdXNoIG1lbnUgZnVuY3Rpb25hbGl0eSB0byB0aGUgc2lkZWJhci5cbiAgICAgKlxuICAgICAqIEB0eXBlIEZ1bmN0aW9uXG4gICAgICogQHVzYWdlOiAkLkFkbWluTFRFLnB1c2hNZW51KFwiW2RhdGEtdG9nZ2xlPSdvZmZjYW52YXMnXVwiKVxuICAgICAqL1xuICAgICQuQWRtaW5MVEUucHVzaE1lbnUgPSB7XG4gICAgICAgIGFjdGl2YXRlOiBmdW5jdGlvbiBhY3RpdmF0ZSh0b2dnbGVCdG4pIHtcbiAgICAgICAgICAgIC8vR2V0IHRoZSBzY3JlZW4gc2l6ZXNcbiAgICAgICAgICAgIHZhciBzY3JlZW5TaXplcyA9ICQuQWRtaW5MVEUub3B0aW9ucy5zY3JlZW5TaXplcztcblxuICAgICAgICAgICAgLy9FbmFibGUgc2lkZWJhciB0b2dnbGVcbiAgICAgICAgICAgICQoZG9jdW1lbnQpLm9uKCdjbGljaycsIHRvZ2dsZUJ0biwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgICAgICAgICAvL0VuYWJsZSBzaWRlYmFyIHB1c2ggbWVudVxuICAgICAgICAgICAgICAgIGlmICgkKHdpbmRvdykud2lkdGgoKSA+IHNjcmVlblNpemVzLnNtIC0gMSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoJChcImJvZHlcIikuaGFzQ2xhc3MoJ3NpZGViYXItY29sbGFwc2UnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJChcImJvZHlcIikucmVtb3ZlQ2xhc3MoJ3NpZGViYXItY29sbGFwc2UnKS50cmlnZ2VyKCdleHBhbmRlZC5wdXNoTWVudScpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgJChcImJvZHlcIikuYWRkQ2xhc3MoJ3NpZGViYXItY29sbGFwc2UnKS50cmlnZ2VyKCdjb2xsYXBzZWQucHVzaE1lbnUnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvL0hhbmRsZSBzaWRlYmFyIHB1c2ggbWVudSBmb3Igc21hbGwgc2NyZWVuc1xuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCQoXCJib2R5XCIpLmhhc0NsYXNzKCdzaWRlYmFyLW9wZW4nKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCJib2R5XCIpLnJlbW92ZUNsYXNzKCdzaWRlYmFyLW9wZW4nKS5yZW1vdmVDbGFzcygnc2lkZWJhci1jb2xsYXBzZScpLnRyaWdnZXIoJ2NvbGxhcHNlZC5wdXNoTWVudScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiYm9keVwiKS5hZGRDbGFzcygnc2lkZWJhci1vcGVuJykudHJpZ2dlcignZXhwYW5kZWQucHVzaE1lbnUnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICQoXCIuY29udGVudC13cmFwcGVyXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAvL0VuYWJsZSBoaWRlIG1lbnUgd2hlbiBjbGlja2luZyBvbiB0aGUgY29udGVudC13cmFwcGVyIG9uIHNtYWxsIHNjcmVlbnNcbiAgICAgICAgICAgICAgICBpZiAoJCh3aW5kb3cpLndpZHRoKCkgPD0gc2NyZWVuU2l6ZXMuc20gLSAxICYmICQoXCJib2R5XCIpLmhhc0NsYXNzKFwic2lkZWJhci1vcGVuXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgICQoXCJib2R5XCIpLnJlbW92ZUNsYXNzKCdzaWRlYmFyLW9wZW4nKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgLy9FbmFibGUgZXhwYW5kIG9uIGhvdmVyIGZvciBzaWRlYmFyIG1pbmlcbiAgICAgICAgICAgIGlmICgkLkFkbWluTFRFLm9wdGlvbnMuc2lkZWJhckV4cGFuZE9uSG92ZXIgfHwgJCgnYm9keScpLmhhc0NsYXNzKCdmaXhlZCcpICYmICQoJ2JvZHknKS5oYXNDbGFzcygnc2lkZWJhci1taW5pJykpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmV4cGFuZE9uSG92ZXIoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgZXhwYW5kT25Ib3ZlcjogZnVuY3Rpb24gZXhwYW5kT25Ib3ZlcigpIHtcbiAgICAgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgICAgICB2YXIgc2NyZWVuV2lkdGggPSAkLkFkbWluTFRFLm9wdGlvbnMuc2NyZWVuU2l6ZXMuc20gLSAxO1xuICAgICAgICAgICAgLy9FeHBhbmQgc2lkZWJhciBvbiBob3ZlclxuICAgICAgICAgICAgJCgnLm1haW4tc2lkZWJhcicpLmhvdmVyKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoJCgnYm9keScpLmhhc0NsYXNzKCdzaWRlYmFyLW1pbmknKSAmJiAkKFwiYm9keVwiKS5oYXNDbGFzcygnc2lkZWJhci1jb2xsYXBzZScpICYmICQod2luZG93KS53aWR0aCgpID4gc2NyZWVuV2lkdGgpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuZXhwYW5kKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmICgkKCdib2R5JykuaGFzQ2xhc3MoJ3NpZGViYXItbWluaScpICYmICQoJ2JvZHknKS5oYXNDbGFzcygnc2lkZWJhci1leHBhbmRlZC1vbi1ob3ZlcicpICYmICQod2luZG93KS53aWR0aCgpID4gc2NyZWVuV2lkdGgpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuY29sbGFwc2UoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgZXhwYW5kOiBmdW5jdGlvbiBleHBhbmQoKSB7XG4gICAgICAgICAgICAkKFwiYm9keVwiKS5yZW1vdmVDbGFzcygnc2lkZWJhci1jb2xsYXBzZScpLmFkZENsYXNzKCdzaWRlYmFyLWV4cGFuZGVkLW9uLWhvdmVyJyk7XG4gICAgICAgIH0sXG4gICAgICAgIGNvbGxhcHNlOiBmdW5jdGlvbiBjb2xsYXBzZSgpIHtcbiAgICAgICAgICAgIGlmICgkKCdib2R5JykuaGFzQ2xhc3MoJ3NpZGViYXItZXhwYW5kZWQtb24taG92ZXInKSkge1xuICAgICAgICAgICAgICAgICQoJ2JvZHknKS5yZW1vdmVDbGFzcygnc2lkZWJhci1leHBhbmRlZC1vbi1ob3ZlcicpLmFkZENsYXNzKCdzaWRlYmFyLWNvbGxhcHNlJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLyogVHJlZSgpXG4gICAgICogPT09PT09XG4gICAgICogQ29udmVydHMgdGhlIHNpZGViYXIgaW50byBhIG11bHRpbGV2ZWxcbiAgICAgKiB0cmVlIHZpZXcgbWVudS5cbiAgICAgKlxuICAgICAqIEB0eXBlIEZ1bmN0aW9uXG4gICAgICogQFVzYWdlOiAkLkFkbWluTFRFLnRyZWUoJy5zaWRlYmFyJylcbiAgICAgKi9cbiAgICAkLkFkbWluTFRFLnRyZWUgPSBmdW5jdGlvbiAobWVudSkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgYW5pbWF0aW9uU3BlZWQgPSAkLkFkbWluTFRFLm9wdGlvbnMuYW5pbWF0aW9uU3BlZWQ7XG4gICAgICAgICQoZG9jdW1lbnQpLm9mZignY2xpY2snLCBtZW51ICsgJyBsaSBhJykub24oJ2NsaWNrJywgbWVudSArICcgbGkgYScsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAvL0dldCB0aGUgY2xpY2tlZCBsaW5rIGFuZCB0aGUgbmV4dCBlbGVtZW50XG4gICAgICAgICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpO1xuICAgICAgICAgICAgdmFyIGNoZWNrRWxlbWVudCA9ICR0aGlzLm5leHQoKTtcblxuICAgICAgICAgICAgLy9DaGVjayBpZiB0aGUgbmV4dCBlbGVtZW50IGlzIGEgbWVudSBhbmQgaXMgdmlzaWJsZVxuICAgICAgICAgICAgaWYgKGNoZWNrRWxlbWVudC5pcygnLnRyZWV2aWV3LW1lbnUnKSAmJiBjaGVja0VsZW1lbnQuaXMoJzp2aXNpYmxlJykgJiYgISQoJ2JvZHknKS5oYXNDbGFzcygnc2lkZWJhci1jb2xsYXBzZScpKSB7XG4gICAgICAgICAgICAgICAgLy9DbG9zZSB0aGUgbWVudVxuICAgICAgICAgICAgICAgIGNoZWNrRWxlbWVudC5zbGlkZVVwKGFuaW1hdGlvblNwZWVkLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGNoZWNrRWxlbWVudC5yZW1vdmVDbGFzcygnbWVudS1vcGVuJyk7XG4gICAgICAgICAgICAgICAgICAgIC8vRml4IHRoZSBsYXlvdXQgaW4gY2FzZSB0aGUgc2lkZWJhciBzdHJldGNoZXMgb3ZlciB0aGUgaGVpZ2h0IG9mIHRoZSB3aW5kb3dcbiAgICAgICAgICAgICAgICAgICAgLy9fdGhpcy5sYXlvdXQuZml4KCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgY2hlY2tFbGVtZW50LnBhcmVudChcImxpXCIpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy9JZiB0aGUgbWVudSBpcyBub3QgdmlzaWJsZVxuICAgICAgICAgICAgZWxzZSBpZiAoY2hlY2tFbGVtZW50LmlzKCcudHJlZXZpZXctbWVudScpICYmICFjaGVja0VsZW1lbnQuaXMoJzp2aXNpYmxlJykpIHtcbiAgICAgICAgICAgICAgICAgICAgLy9HZXQgdGhlIHBhcmVudCBtZW51XG4gICAgICAgICAgICAgICAgICAgIHZhciBwYXJlbnQgPSAkdGhpcy5wYXJlbnRzKCd1bCcpLmZpcnN0KCk7XG4gICAgICAgICAgICAgICAgICAgIC8vQ2xvc2UgYWxsIG9wZW4gbWVudXMgd2l0aGluIHRoZSBwYXJlbnRcbiAgICAgICAgICAgICAgICAgICAgdmFyIHVsID0gcGFyZW50LmZpbmQoJ3VsOnZpc2libGUnKS5zbGlkZVVwKGFuaW1hdGlvblNwZWVkKTtcbiAgICAgICAgICAgICAgICAgICAgLy9SZW1vdmUgdGhlIG1lbnUtb3BlbiBjbGFzcyBmcm9tIHRoZSBwYXJlbnRcbiAgICAgICAgICAgICAgICAgICAgdWwucmVtb3ZlQ2xhc3MoJ21lbnUtb3BlbicpO1xuICAgICAgICAgICAgICAgICAgICAvL0dldCB0aGUgcGFyZW50IGxpXG4gICAgICAgICAgICAgICAgICAgIHZhciBwYXJlbnRfbGkgPSAkdGhpcy5wYXJlbnQoXCJsaVwiKTtcblxuICAgICAgICAgICAgICAgICAgICAvL09wZW4gdGhlIHRhcmdldCBtZW51IGFuZCBhZGQgdGhlIG1lbnUtb3BlbiBjbGFzc1xuICAgICAgICAgICAgICAgICAgICBjaGVja0VsZW1lbnQuc2xpZGVEb3duKGFuaW1hdGlvblNwZWVkLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL0FkZCB0aGUgY2xhc3MgYWN0aXZlIHRvIHRoZSBwYXJlbnQgbGlcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrRWxlbWVudC5hZGRDbGFzcygnbWVudS1vcGVuJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnQuZmluZCgnbGkuYWN0aXZlJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50X2xpLmFkZENsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vRml4IHRoZSBsYXlvdXQgaW4gY2FzZSB0aGUgc2lkZWJhciBzdHJldGNoZXMgb3ZlciB0aGUgaGVpZ2h0IG9mIHRoZSB3aW5kb3dcbiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLmxheW91dC5maXgoKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy9pZiB0aGlzIGlzbid0IGEgbGluaywgcHJldmVudCB0aGUgcGFnZSBmcm9tIGJlaW5nIHJlZGlyZWN0ZWRcbiAgICAgICAgICAgIGlmIChjaGVja0VsZW1lbnQuaXMoJy50cmVldmlldy1tZW51JykpIHtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICAvKiBDb250cm9sU2lkZWJhclxuICAgICAqID09PT09PT09PT09PT09XG4gICAgICogQWRkcyBmdW5jdGlvbmFsaXR5IHRvIHRoZSByaWdodCBzaWRlYmFyXG4gICAgICpcbiAgICAgKiBAdHlwZSBPYmplY3RcbiAgICAgKiBAdXNhZ2UgJC5BZG1pbkxURS5jb250cm9sU2lkZWJhci5hY3RpdmF0ZShvcHRpb25zKVxuICAgICAqL1xuICAgICQuQWRtaW5MVEUuY29udHJvbFNpZGViYXIgPSB7XG4gICAgICAgIC8vaW5zdGFudGlhdGUgdGhlIG9iamVjdFxuICAgICAgICBhY3RpdmF0ZTogZnVuY3Rpb24gYWN0aXZhdGUoKSB7XG4gICAgICAgICAgICAvL0dldCB0aGUgb2JqZWN0XG4gICAgICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICAgICAgLy9VcGRhdGUgb3B0aW9uc1xuICAgICAgICAgICAgdmFyIG8gPSAkLkFkbWluTFRFLm9wdGlvbnMuY29udHJvbFNpZGViYXJPcHRpb25zO1xuICAgICAgICAgICAgLy9HZXQgdGhlIHNpZGViYXJcbiAgICAgICAgICAgIHZhciBzaWRlYmFyID0gJChvLnNlbGVjdG9yKTtcbiAgICAgICAgICAgIC8vVGhlIHRvZ2dsZSBidXR0b25cbiAgICAgICAgICAgIHZhciBidG4gPSAkKG8udG9nZ2xlQnRuU2VsZWN0b3IpO1xuXG4gICAgICAgICAgICAvL0xpc3RlbiB0byB0aGUgY2xpY2sgZXZlbnRcbiAgICAgICAgICAgIGJ0bi5vbignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAvL0lmIHRoZSBzaWRlYmFyIGlzIG5vdCBvcGVuXG4gICAgICAgICAgICAgICAgaWYgKCFzaWRlYmFyLmhhc0NsYXNzKCdjb250cm9sLXNpZGViYXItb3BlbicpICYmICEkKCdib2R5JykuaGFzQ2xhc3MoJ2NvbnRyb2wtc2lkZWJhci1vcGVuJykpIHtcbiAgICAgICAgICAgICAgICAgICAgLy9PcGVuIHRoZSBzaWRlYmFyXG4gICAgICAgICAgICAgICAgICAgIF90aGlzLm9wZW4oc2lkZWJhciwgby5zbGlkZSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuY2xvc2Uoc2lkZWJhciwgby5zbGlkZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIC8vSWYgdGhlIGJvZHkgaGFzIGEgYm94ZWQgbGF5b3V0LCBmaXggdGhlIHNpZGViYXIgYmcgcG9zaXRpb25cbiAgICAgICAgICAgIHZhciBiZyA9ICQoXCIuY29udHJvbC1zaWRlYmFyLWJnXCIpO1xuICAgICAgICAgICAgX3RoaXMuX2ZpeChiZyk7XG5cbiAgICAgICAgICAgIC8vSWYgdGhlIGJvZHkgaGFzIGEgZml4ZWQgbGF5b3V0LCBtYWtlIHRoZSBjb250cm9sIHNpZGViYXIgZml4ZWRcbiAgICAgICAgICAgIGlmICgkKCdib2R5JykuaGFzQ2xhc3MoJ2ZpeGVkJykpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5fZml4Rm9yRml4ZWQoc2lkZWJhcik7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vSWYgdGhlIGNvbnRlbnQgaGVpZ2h0IGlzIGxlc3MgdGhhbiB0aGUgc2lkZWJhcidzIGhlaWdodCwgZm9yY2UgbWF4IGhlaWdodFxuICAgICAgICAgICAgICAgIGlmICgkKCcuY29udGVudC13cmFwcGVyLCAucmlnaHQtc2lkZScpLmhlaWdodCgpIDwgc2lkZWJhci5oZWlnaHQoKSkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5fZml4Rm9yQ29udGVudChzaWRlYmFyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIC8vT3BlbiB0aGUgY29udHJvbCBzaWRlYmFyXG4gICAgICAgIG9wZW46IGZ1bmN0aW9uIG9wZW4oc2lkZWJhciwgc2xpZGUpIHtcbiAgICAgICAgICAgIC8vU2xpZGUgb3ZlciBjb250ZW50XG4gICAgICAgICAgICBpZiAoc2xpZGUpIHtcbiAgICAgICAgICAgICAgICBzaWRlYmFyLmFkZENsYXNzKCdjb250cm9sLXNpZGViYXItb3BlbicpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvL1B1c2ggdGhlIGNvbnRlbnQgYnkgYWRkaW5nIHRoZSBvcGVuIGNsYXNzIHRvIHRoZSBib2R5IGluc3RlYWRcbiAgICAgICAgICAgICAgICAvL29mIHRoZSBzaWRlYmFyIGl0c2VsZlxuICAgICAgICAgICAgICAgICQoJ2JvZHknKS5hZGRDbGFzcygnY29udHJvbC1zaWRlYmFyLW9wZW4nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgLy9DbG9zZSB0aGUgY29udHJvbCBzaWRlYmFyXG4gICAgICAgIGNsb3NlOiBmdW5jdGlvbiBjbG9zZShzaWRlYmFyLCBzbGlkZSkge1xuICAgICAgICAgICAgaWYgKHNsaWRlKSB7XG4gICAgICAgICAgICAgICAgc2lkZWJhci5yZW1vdmVDbGFzcygnY29udHJvbC1zaWRlYmFyLW9wZW4nKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgJCgnYm9keScpLnJlbW92ZUNsYXNzKCdjb250cm9sLXNpZGViYXItb3BlbicpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBfZml4OiBmdW5jdGlvbiBfZml4KHNpZGViYXIpIHtcbiAgICAgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgICAgICBpZiAoJChcImJvZHlcIikuaGFzQ2xhc3MoJ2xheW91dC1ib3hlZCcpKSB7XG4gICAgICAgICAgICAgICAgc2lkZWJhci5jc3MoJ3Bvc2l0aW9uJywgJ2Fic29sdXRlJyk7XG4gICAgICAgICAgICAgICAgc2lkZWJhci5oZWlnaHQoJChcIi53cmFwcGVyXCIpLmhlaWdodCgpKTtcbiAgICAgICAgICAgICAgICBpZiAoX3RoaXMuaGFzQmluZGVkUmVzaXplKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgJCh3aW5kb3cpLnJlc2l6ZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLl9maXgoc2lkZWJhcik7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgX3RoaXMuaGFzQmluZGVkUmVzaXplID0gdHJ1ZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc2lkZWJhci5jc3Moe1xuICAgICAgICAgICAgICAgICAgICAncG9zaXRpb24nOiAnZml4ZWQnLFxuICAgICAgICAgICAgICAgICAgICAnaGVpZ2h0JzogJ2F1dG8nXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIF9maXhGb3JGaXhlZDogZnVuY3Rpb24gX2ZpeEZvckZpeGVkKHNpZGViYXIpIHtcbiAgICAgICAgICAgIHNpZGViYXIuY3NzKHtcbiAgICAgICAgICAgICAgICAncG9zaXRpb24nOiAnZml4ZWQnLFxuICAgICAgICAgICAgICAgICdtYXgtaGVpZ2h0JzogJzEwMCUnLFxuICAgICAgICAgICAgICAgICdvdmVyZmxvdyc6ICdhdXRvJyxcbiAgICAgICAgICAgICAgICAncGFkZGluZy1ib3R0b20nOiAnNTBweCdcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBfZml4Rm9yQ29udGVudDogZnVuY3Rpb24gX2ZpeEZvckNvbnRlbnQoc2lkZWJhcikge1xuICAgICAgICAgICAgJChcIi5jb250ZW50LXdyYXBwZXIsIC5yaWdodC1zaWRlXCIpLmNzcygnbWluLWhlaWdodCcsIHNpZGViYXIuaGVpZ2h0KCkpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8qIEJveFdpZGdldFxuICAgICAqID09PT09PT09PVxuICAgICAqIEJveFdpZGdldCBpcyBhIHBsdWdpbiB0byBoYW5kbGUgY29sbGFwc2luZyBhbmRcbiAgICAgKiByZW1vdmluZyBib3hlcyBmcm9tIHRoZSBzY3JlZW4uXG4gICAgICpcbiAgICAgKiBAdHlwZSBPYmplY3RcbiAgICAgKiBAdXNhZ2UgJC5BZG1pbkxURS5ib3hXaWRnZXQuYWN0aXZhdGUoKVxuICAgICAqICAgICAgICBTZXQgYWxsIHlvdXIgb3B0aW9ucyBpbiB0aGUgbWFpbiAkLkFkbWluTFRFLm9wdGlvbnMgb2JqZWN0XG4gICAgICovXG4gICAgJC5BZG1pbkxURS5ib3hXaWRnZXQgPSB7XG4gICAgICAgIHNlbGVjdG9yczogJC5BZG1pbkxURS5vcHRpb25zLmJveFdpZGdldE9wdGlvbnMuYm94V2lkZ2V0U2VsZWN0b3JzLFxuICAgICAgICBpY29uczogJC5BZG1pbkxURS5vcHRpb25zLmJveFdpZGdldE9wdGlvbnMuYm94V2lkZ2V0SWNvbnMsXG4gICAgICAgIGFuaW1hdGlvblNwZWVkOiAkLkFkbWluTFRFLm9wdGlvbnMuYW5pbWF0aW9uU3BlZWQsXG4gICAgICAgIGFjdGl2YXRlOiBmdW5jdGlvbiBhY3RpdmF0ZShfYm94KSB7XG4gICAgICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICAgICAgaWYgKCFfYm94KSB7XG4gICAgICAgICAgICAgICAgX2JveCA9IGRvY3VtZW50OyAvLyBhY3RpdmF0ZSBhbGwgYm94ZXMgcGVyIGRlZmF1bHRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vTGlzdGVuIGZvciBjb2xsYXBzZSBldmVudCB0cmlnZ2Vyc1xuICAgICAgICAgICAgJChfYm94KS5vbignY2xpY2snLCBfdGhpcy5zZWxlY3RvcnMuY29sbGFwc2UsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIF90aGlzLmNvbGxhcHNlKCQodGhpcykpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIC8vTGlzdGVuIGZvciByZW1vdmUgZXZlbnQgdHJpZ2dlcnNcbiAgICAgICAgICAgICQoX2JveCkub24oJ2NsaWNrJywgX3RoaXMuc2VsZWN0b3JzLnJlbW92ZSwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgX3RoaXMucmVtb3ZlKCQodGhpcykpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIGNvbGxhcHNlOiBmdW5jdGlvbiBjb2xsYXBzZShlbGVtZW50KSB7XG4gICAgICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICAgICAgLy9GaW5kIHRoZSBib3ggcGFyZW50XG4gICAgICAgICAgICB2YXIgYm94ID0gZWxlbWVudC5wYXJlbnRzKFwiLmJveFwiKS5maXJzdCgpO1xuICAgICAgICAgICAgLy9GaW5kIHRoZSBib2R5IGFuZCB0aGUgZm9vdGVyXG4gICAgICAgICAgICB2YXIgYm94X2NvbnRlbnQgPSBib3guZmluZChcIj4gLmJveC1ib2R5LCA+IC5ib3gtZm9vdGVyLCA+IGZvcm0gID4uYm94LWJvZHksID4gZm9ybSA+IC5ib3gtZm9vdGVyXCIpO1xuICAgICAgICAgICAgaWYgKCFib3guaGFzQ2xhc3MoXCJjb2xsYXBzZWQtYm94XCIpKSB7XG4gICAgICAgICAgICAgICAgLy9Db252ZXJ0IG1pbnVzIGludG8gcGx1c1xuICAgICAgICAgICAgICAgIGVsZW1lbnQuY2hpbGRyZW4oXCI6Zmlyc3RcIikucmVtb3ZlQ2xhc3MoX3RoaXMuaWNvbnMuY29sbGFwc2UpLmFkZENsYXNzKF90aGlzLmljb25zLm9wZW4pO1xuICAgICAgICAgICAgICAgIC8vSGlkZSB0aGUgY29udGVudFxuICAgICAgICAgICAgICAgIGJveF9jb250ZW50LnNsaWRlVXAoX3RoaXMuYW5pbWF0aW9uU3BlZWQsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgYm94LmFkZENsYXNzKFwiY29sbGFwc2VkLWJveFwiKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy9Db252ZXJ0IHBsdXMgaW50byBtaW51c1xuICAgICAgICAgICAgICAgIGVsZW1lbnQuY2hpbGRyZW4oXCI6Zmlyc3RcIikucmVtb3ZlQ2xhc3MoX3RoaXMuaWNvbnMub3BlbikuYWRkQ2xhc3MoX3RoaXMuaWNvbnMuY29sbGFwc2UpO1xuICAgICAgICAgICAgICAgIC8vU2hvdyB0aGUgY29udGVudFxuICAgICAgICAgICAgICAgIGJveF9jb250ZW50LnNsaWRlRG93bihfdGhpcy5hbmltYXRpb25TcGVlZCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBib3gucmVtb3ZlQ2xhc3MoXCJjb2xsYXBzZWQtYm94XCIpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZShlbGVtZW50KSB7XG4gICAgICAgICAgICAvL0ZpbmQgdGhlIGJveCBwYXJlbnRcbiAgICAgICAgICAgIHZhciBib3ggPSBlbGVtZW50LnBhcmVudHMoXCIuYm94XCIpLmZpcnN0KCk7XG4gICAgICAgICAgICBib3guc2xpZGVVcCh0aGlzLmFuaW1hdGlvblNwZWVkKTtcbiAgICAgICAgfVxuICAgIH07XG59XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLVxuICogLSBDdXN0b20gUGx1Z2lucyAtXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS1cbiAqIEFsbCBjdXN0b20gcGx1Z2lucyBhcmUgZGVmaW5lZCBiZWxvdy5cbiAqL1xuXG4vKlxuICogQk9YIFJFRlJFU0ggQlVUVE9OXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS1cbiAqIFRoaXMgaXMgYSBjdXN0b20gcGx1Z2luIHRvIHVzZSB3aXRoIHRoZSBjb21wb25lbnQgQk9YLiBJdCBhbGxvd3MgeW91IHRvIGFkZFxuICogYSByZWZyZXNoIGJ1dHRvbiB0byB0aGUgYm94LiBJdCBjb252ZXJ0cyB0aGUgYm94J3Mgc3RhdGUgdG8gYSBsb2FkaW5nIHN0YXRlLlxuICpcbiAqIEB0eXBlIHBsdWdpblxuICogQHVzYWdlICQoXCIjYm94LXdpZGdldFwiKS5ib3hSZWZyZXNoKCBvcHRpb25zICk7XG4gKi9cbihmdW5jdGlvbiAoJCkge1xuXG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgICAkLmZuLmJveFJlZnJlc2ggPSBmdW5jdGlvbiAob3B0aW9ucykge1xuXG4gICAgICAgIC8vIFJlbmRlciBvcHRpb25zXG4gICAgICAgIHZhciBzZXR0aW5ncyA9ICQuZXh0ZW5kKHtcbiAgICAgICAgICAgIC8vUmVmcmVzaCBidXR0b24gc2VsZWN0b3JcbiAgICAgICAgICAgIHRyaWdnZXI6IFwiLnJlZnJlc2gtYnRuXCIsXG4gICAgICAgICAgICAvL0ZpbGUgc291cmNlIHRvIGJlIGxvYWRlZCAoZS5nOiBhamF4L3NyYy5waHApXG4gICAgICAgICAgICBzb3VyY2U6IFwiXCIsXG4gICAgICAgICAgICAvL0NhbGxiYWNrc1xuICAgICAgICAgICAgb25Mb2FkU3RhcnQ6IGZ1bmN0aW9uIG9uTG9hZFN0YXJ0KGJveCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBib3g7XG4gICAgICAgICAgICB9LCAvL1JpZ2h0IGFmdGVyIHRoZSBidXR0b24gaGFzIGJlZW4gY2xpY2tlZFxuICAgICAgICAgICAgb25Mb2FkRG9uZTogZnVuY3Rpb24gb25Mb2FkRG9uZShib3gpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYm94O1xuICAgICAgICAgICAgfSAvL1doZW4gdGhlIHNvdXJjZSBoYXMgYmVlbiBsb2FkZWRcblxuICAgICAgICB9LCBvcHRpb25zKTtcblxuICAgICAgICAvL1RoZSBvdmVybGF5XG4gICAgICAgIHZhciBvdmVybGF5ID0gJCgnPGRpdiBjbGFzcz1cIm92ZXJsYXlcIj48ZGl2IGNsYXNzPVwiZmEgZmEtcmVmcmVzaCBmYS1zcGluXCI+PC9kaXY+PC9kaXY+Jyk7XG5cbiAgICAgICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAvL2lmIGEgc291cmNlIGlzIHNwZWNpZmllZFxuICAgICAgICAgICAgaWYgKHNldHRpbmdzLnNvdXJjZSA9PT0gXCJcIikge1xuICAgICAgICAgICAgICAgIGlmICh3aW5kb3cuY29uc29sZSkge1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cuY29uc29sZS5sb2coXCJQbGVhc2Ugc3BlY2lmeSBhIHNvdXJjZSBmaXJzdCAtIGJveFJlZnJlc2goKVwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy90aGUgYm94XG4gICAgICAgICAgICB2YXIgYm94ID0gJCh0aGlzKTtcbiAgICAgICAgICAgIC8vdGhlIGJ1dHRvblxuICAgICAgICAgICAgdmFyIHJCdG4gPSBib3guZmluZChzZXR0aW5ncy50cmlnZ2VyKS5maXJzdCgpO1xuXG4gICAgICAgICAgICAvL09uIHRyaWdnZXIgY2xpY2tcbiAgICAgICAgICAgIHJCdG4ub24oJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgLy9BZGQgbG9hZGluZyBvdmVybGF5XG4gICAgICAgICAgICAgICAgc3RhcnQoYm94KTtcblxuICAgICAgICAgICAgICAgIC8vUGVyZm9ybSBhamF4IGNhbGxcbiAgICAgICAgICAgICAgICBib3guZmluZChcIi5ib3gtYm9keVwiKS5sb2FkKHNldHRpbmdzLnNvdXJjZSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBkb25lKGJveCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgZnVuY3Rpb24gc3RhcnQoYm94KSB7XG4gICAgICAgICAgICAvL0FkZCBvdmVybGF5IGFuZCBsb2FkaW5nIGltZ1xuICAgICAgICAgICAgYm94LmFwcGVuZChvdmVybGF5KTtcblxuICAgICAgICAgICAgc2V0dGluZ3Mub25Mb2FkU3RhcnQuY2FsbChib3gpO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gZG9uZShib3gpIHtcbiAgICAgICAgICAgIC8vUmVtb3ZlIG92ZXJsYXkgYW5kIGxvYWRpbmcgaW1nXG4gICAgICAgICAgICBib3guZmluZChvdmVybGF5KS5yZW1vdmUoKTtcblxuICAgICAgICAgICAgc2V0dGluZ3Mub25Mb2FkRG9uZS5jYWxsKGJveCk7XG4gICAgICAgIH1cbiAgICB9O1xufSkoalF1ZXJ5KTtcblxuLypcbiAqIEVYUExJQ0lUIEJPWCBDT05UUk9MU1xuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIFRoaXMgaXMgYSBjdXN0b20gcGx1Z2luIHRvIHVzZSB3aXRoIHRoZSBjb21wb25lbnQgQk9YLiBJdCBhbGxvd3MgeW91IHRvIGFjdGl2YXRlXG4gKiBhIGJveCBpbnNlcnRlZCBpbiB0aGUgRE9NIGFmdGVyIHRoZSBhcHAuanMgd2FzIGxvYWRlZCwgdG9nZ2xlIGFuZCByZW1vdmUgYm94LlxuICpcbiAqIEB0eXBlIHBsdWdpblxuICogQHVzYWdlICQoXCIjYm94LXdpZGdldFwiKS5hY3RpdmF0ZUJveCgpO1xuICogQHVzYWdlICQoXCIjYm94LXdpZGdldFwiKS50b2dnbGVCb3goKTtcbiAqIEB1c2FnZSAkKFwiI2JveC13aWRnZXRcIikucmVtb3ZlQm94KCk7XG4gKi9cbihmdW5jdGlvbiAoJCkge1xuXG4gICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgJC5mbi5hY3RpdmF0ZUJveCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgJC5BZG1pbkxURS5ib3hXaWRnZXQuYWN0aXZhdGUodGhpcyk7XG4gICAgfTtcblxuICAgICQuZm4udG9nZ2xlQm94ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgYnV0dG9uID0gJCgkLkFkbWluTFRFLmJveFdpZGdldC5zZWxlY3RvcnMuY29sbGFwc2UsIHRoaXMpO1xuICAgICAgICAkLkFkbWluTFRFLmJveFdpZGdldC5jb2xsYXBzZShidXR0b24pO1xuICAgIH07XG5cbiAgICAkLmZuLnJlbW92ZUJveCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGJ1dHRvbiA9ICQoJC5BZG1pbkxURS5ib3hXaWRnZXQuc2VsZWN0b3JzLnJlbW92ZSwgdGhpcyk7XG4gICAgICAgICQuQWRtaW5MVEUuYm94V2lkZ2V0LnJlbW92ZShidXR0b24pO1xuICAgIH07XG59KShqUXVlcnkpO1xuXG4vKlxuICogVE9ETyBMSVNUIENVU1RPTSBQTFVHSU5cbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBUaGlzIHBsdWdpbiBkZXBlbmRzIG9uIGlDaGVjayBwbHVnaW4gZm9yIGNoZWNrYm94IGFuZCByYWRpbyBpbnB1dHNcbiAqXG4gKiBAdHlwZSBwbHVnaW5cbiAqIEB1c2FnZSAkKFwiI3RvZG8td2lkZ2V0XCIpLnRvZG9saXN0KCBvcHRpb25zICk7XG4gKi9cbihmdW5jdGlvbiAoJCkge1xuXG4gICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgJC5mbi50b2RvbGlzdCA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIC8vIFJlbmRlciBvcHRpb25zXG4gICAgICAgIHZhciBzZXR0aW5ncyA9ICQuZXh0ZW5kKHtcbiAgICAgICAgICAgIC8vV2hlbiB0aGUgdXNlciBjaGVja3MgdGhlIGlucHV0XG4gICAgICAgICAgICBvbkNoZWNrOiBmdW5jdGlvbiBvbkNoZWNrKGVsZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBlbGU7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLy9XaGVuIHRoZSB1c2VyIHVuY2hlY2tzIHRoZSBpbnB1dFxuICAgICAgICAgICAgb25VbmNoZWNrOiBmdW5jdGlvbiBvblVuY2hlY2soZWxlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVsZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgb3B0aW9ucyk7XG5cbiAgICAgICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgJC5mbi5pQ2hlY2sgIT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAkKCdpbnB1dCcsIHRoaXMpLm9uKCdpZkNoZWNrZWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBlbGUgPSAkKHRoaXMpLnBhcmVudHMoXCJsaVwiKS5maXJzdCgpO1xuICAgICAgICAgICAgICAgICAgICBlbGUudG9nZ2xlQ2xhc3MoXCJkb25lXCIpO1xuICAgICAgICAgICAgICAgICAgICBzZXR0aW5ncy5vbkNoZWNrLmNhbGwoZWxlKTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICQoJ2lucHV0JywgdGhpcykub24oJ2lmVW5jaGVja2VkJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZWxlID0gJCh0aGlzKS5wYXJlbnRzKFwibGlcIikuZmlyc3QoKTtcbiAgICAgICAgICAgICAgICAgICAgZWxlLnRvZ2dsZUNsYXNzKFwiZG9uZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgc2V0dGluZ3Mub25VbmNoZWNrLmNhbGwoZWxlKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgJCgnaW5wdXQnLCB0aGlzKS5vbignY2hhbmdlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZWxlID0gJCh0aGlzKS5wYXJlbnRzKFwibGlcIikuZmlyc3QoKTtcbiAgICAgICAgICAgICAgICAgICAgZWxlLnRvZ2dsZUNsYXNzKFwiZG9uZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCQoJ2lucHV0JywgZWxlKS5pcyhcIjpjaGVja2VkXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXR0aW5ncy5vbkNoZWNrLmNhbGwoZWxlKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldHRpbmdzLm9uVW5jaGVjay5jYWxsKGVsZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcbn0pKGpRdWVyeSk7XG5cbi8qKlxuICogQWxsb3dzIHlvdSB0byBhZGQgZGF0YS1tZXRob2Q9XCJNRVRIT0QgdG8gbGlua3MgdG8gYXV0b21hdGljYWxseSBpbmplY3QgYSBmb3JtXG4gKiB3aXRoIHRoZSBtZXRob2Qgb24gY2xpY2tcbiAqXG4gKiBFeGFtcGxlOiA8YSBocmVmPVwie3tyb3V0ZSgnY3VzdG9tZXJzLmRlc3Ryb3knLCAkY3VzdG9tZXItPmlkKX19XCJcbiAqIGRhdGEtbWV0aG9kPVwiZGVsZXRlXCIgbmFtZT1cImRlbGV0ZV9pdGVtXCI+RGVsZXRlPC9hPlxuICpcbiAqIEluamVjdHMgYSBmb3JtIHdpdGggdGhhdCdzIGZpcmVkIG9uIGNsaWNrIG9mIHRoZSBsaW5rIHdpdGggYSBERUxFVEUgcmVxdWVzdC5cbiAqIEdvb2QgYmVjYXVzZSB5b3UgZG9uJ3QgaGF2ZSB0byBkaXJ0eSB5b3VyIEhUTUwgd2l0aCBkZWxldGUgZm9ybXMgZXZlcnl3aGVyZS5cbiAqL1xuZnVuY3Rpb24gYWRkRGVsZXRlRm9ybXMoKSB7XG4gICAgJCgnW2RhdGEtbWV0aG9kXScpLmFwcGVuZChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghJCh0aGlzKS5maW5kKCdmb3JtJykubGVuZ3RoID4gMCkgcmV0dXJuIFwiXFxuXCIgKyBcIjxmb3JtIGFjdGlvbj0nXCIgKyAkKHRoaXMpLmF0dHIoJ2hyZWYnKSArIFwiJyBtZXRob2Q9J1BPU1QnIG5hbWU9J2RlbGV0ZV9pdGVtJyBzdHlsZT0nZGlzcGxheTpub25lJz5cXG5cIiArIFwiICAgPGlucHV0IHR5cGU9J2hpZGRlbicgbmFtZT0nX21ldGhvZCcgdmFsdWU9J1wiICsgJCh0aGlzKS5hdHRyKCdkYXRhLW1ldGhvZCcpICsgXCInPlxcblwiICsgXCIgICA8aW5wdXQgdHlwZT0naGlkZGVuJyBuYW1lPSdfdG9rZW4nIHZhbHVlPSdcIiArIEFQUC5jc3JmVG9rZW4gKyBcIic+XFxuXCIgKyBcIjwvZm9ybT5cXG5cIjtlbHNlIHJldHVybiBcIlwiO1xuICAgIH0pLnJlbW92ZUF0dHIoJ2hyZWYnKS5hdHRyKCdzdHlsZScsICdjdXJzb3I6cG9pbnRlcjsnKS5hdHRyKCdvbmNsaWNrJywgJyQodGhpcykuZmluZChcImZvcm1cIikuc3VibWl0KCk7Jyk7XG59XG5cbi8qKlxuICogUGxhY2UgYW55IGpRdWVyeS9oZWxwZXIgcGx1Z2lucyBpbiBoZXJlLlxuICovXG4kKGZ1bmN0aW9uICgpIHtcbiAgICAvKipcbiAgICAgKiBQbGFjZSB0aGUgQ1NSRiB0b2tlbiBhcyBhIGhlYWRlciBvbiBhbGwgcGFnZXMgZm9yIGFjY2VzcyBpbiBBSkFYIHJlcXVlc3RzXG4gICAgICovXG4gICAgJC5hamF4U2V0dXAoe1xuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAnWC1DU1JGLVRPS0VOJzogJCgnbWV0YVtuYW1lPVwiX3Rva2VuXCJdJykuYXR0cignY29udGVudCcpXG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIC8qKlxuICAgICAqIEFkZCB0aGUgZGF0YS1tZXRob2Q9XCJkZWxldGVcIiBmb3JtcyB0byBhbGwgZGVsZXRlIGxpbmtzXG4gICAgICovXG4gICAgYWRkRGVsZXRlRm9ybXMoKTtcblxuICAgIC8qKlxuICAgICAqIFRoaXMgaXMgZm9yIGRlbGV0ZSBidXR0b25zIHRoYXQgYXJlIGxvYWRlZCB2aWEgQUpBWCBpbiBkYXRhdGFibGVzLCB0aGV5IHdpbGwgbm90IHdvcmsgcmlnaHRcbiAgICAgKiB3aXRob3V0IHRoaXMgYmxvY2sgb2YgY29kZVxuICAgICAqL1xuICAgICQoZG9jdW1lbnQpLmFqYXhDb21wbGV0ZShmdW5jdGlvbiAoKSB7XG4gICAgICAgIGFkZERlbGV0ZUZvcm1zKCk7XG4gICAgfSk7XG5cbiAgICAvKipcbiAgICAgKiBHZW5lcmljIGNvbmZpcm0gZm9ybSBkZWxldGUgdXNpbmcgU3dlZXQgQWxlcnRcbiAgICAgKi9cbiAgICAkKCdib2R5Jykub24oJ3N1Ym1pdCcsICdmb3JtW25hbWU9ZGVsZXRlX2l0ZW1dJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB2YXIgZm9ybSA9IHRoaXM7XG4gICAgICAgIHZhciBsaW5rID0gJCgnYVtkYXRhLW1ldGhvZD1cImRlbGV0ZVwiXScpO1xuICAgICAgICB2YXIgY2FuY2VsID0gbGluay5hdHRyKCdkYXRhLXRyYW5zLWJ1dHRvbi1jYW5jZWwnKSA/IGxpbmsuYXR0cignZGF0YS10cmFucy1idXR0b24tY2FuY2VsJykgOiBcIkNhbmNlbFwiO1xuICAgICAgICB2YXIgY29uZmlybSA9IGxpbmsuYXR0cignZGF0YS10cmFucy1idXR0b24tY29uZmlybScpID8gbGluay5hdHRyKCdkYXRhLXRyYW5zLWJ1dHRvbi1jb25maXJtJykgOiBcIlllcywgZGVsZXRlXCI7XG4gICAgICAgIHZhciB0aXRsZSA9IGxpbmsuYXR0cignZGF0YS10cmFucy10aXRsZScpID8gbGluay5hdHRyKCdkYXRhLXRyYW5zLXRpdGxlJykgOiBcIldhcm5pbmdcIjtcbiAgICAgICAgdmFyIHRleHQgPSBsaW5rLmF0dHIoJ2RhdGEtdHJhbnMtdGV4dCcpID8gbGluay5hdHRyKCdkYXRhLXRyYW5zLXRleHQnKSA6IFwiQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGRlbGV0ZSB0aGlzIGl0ZW0/XCI7XG5cbiAgICAgICAgc3dhbCh7XG4gICAgICAgICAgICB0aXRsZTogdGl0bGUsXG4gICAgICAgICAgICB0eXBlOiBcIndhcm5pbmdcIixcbiAgICAgICAgICAgIHNob3dDYW5jZWxCdXR0b246IHRydWUsXG4gICAgICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiBjYW5jZWwsXG4gICAgICAgICAgICBjb25maXJtQnV0dG9uQ29sb3I6IFwiI0RENkI1NVwiLFxuICAgICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6IGNvbmZpcm0sXG4gICAgICAgICAgICBjbG9zZU9uQ29uZmlybTogdHJ1ZVxuICAgICAgICB9LCBmdW5jdGlvbiAoY29uZmlybWVkKSB7XG4gICAgICAgICAgICBpZiAoY29uZmlybWVkKSBmb3JtLnN1Ym1pdCgpO1xuICAgICAgICB9KTtcbiAgICB9KTtcblxuICAgIC8qKlxuICAgICAqIEJpbmQgYWxsIGJvb3RzdHJhcCB0b29sdGlwc1xuICAgICAqL1xuICAgICQoXCJbZGF0YS10b2dnbGU9XFxcInRvb2x0aXBcXFwiXVwiKS50b29sdGlwKCk7XG5cbiAgICAvKipcbiAgICAgKiBCaW5kIGFsbCBib290c3RyYXAgcG9wb3ZlcnNcbiAgICAgKi9cbiAgICAkKFwiW2RhdGEtdG9nZ2xlPVxcXCJwb3BvdmVyXFxcIl1cIikucG9wb3ZlcigpO1xuXG4gICAgLyoqXG4gICAgICogVGhpcyBjbG9zZXMgdGhlIHBvcG92ZXIgd2hlbiBpdHMgY2xpY2tlZCBhd2F5IGZyb21cbiAgICAgKi9cbiAgICAkKCdib2R5Jykub24oJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgJCgnW2RhdGEtdG9nZ2xlPVwicG9wb3ZlclwiXScpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKCEkKHRoaXMpLmlzKGUudGFyZ2V0KSAmJiAkKHRoaXMpLmhhcyhlLnRhcmdldCkubGVuZ3RoID09PSAwICYmICQoJy5wb3BvdmVyJykuaGFzKGUudGFyZ2V0KS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICAkKHRoaXMpLnBvcG92ZXIoJ2hpZGUnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7XG59KTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gcmVzb3VyY2VzL2Fzc2V0cy9qcy9hZG1pbi9hcHAuanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnQkE7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7QUFVQTtBQUNBOzs7Ozs7QUFNQTs7OztBQUlBO0FBQ0E7QUFDQTs7OztBQUlBOztBQUVBOztBQUVBOztBQUVBOzs7O0FBSUE7O0FBRUE7O0FBRUE7QUFDQTs7Ozs7QUFLQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7OztBQUdBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7O0FBUUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7Ozs7Ozs7Ozs7O0FBV0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7O0FBUUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7OztBQVNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7QUFRQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7QUFVQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7O0FBWUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7OztBQVNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7OztBQVdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTs7OztBQUlBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }
/******/ ]);